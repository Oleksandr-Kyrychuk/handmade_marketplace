services:
  api-gateway:
    build:
      context: ./api_gateway
      dockerfile: Dockerfile
    container_name: api_gateway
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG}
      - REDIS_URL=${REDIS_URL}
      - FRONTEND_URL=${FRONTEND_URL}
      - DATABASE_URL=postgresql://${DB_USERNAME}:${DB_PASSWORD}@marketplace_database:5432/${DB_DATABASE}?options=-csearch_path=gateway_schema
    volumes:
      - ./api_gateway:/app
    depends_on:
      marketplace_database:
        condition: service_healthy
      redis:
        condition: service_healthy
      user_service:
        condition: service_healthy
    networks:
      - handmade_network
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:8000/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  marketplace_database:
    image: postgres:17-alpine
    container_name: marketplace_database
    restart: unless-stopped
    volumes:
      - ./infrastructure/postgres/init.sql:/docker-entrypoint-initdb.d/01-init.sql
      - ./infrastructure/postgres/init-extensions.sql:/docker-entrypoint-initdb.d/00-init-extensions.sql
      - marketplace_db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    expose:
      - "5432"
    environment:
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_DATABASE}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - handmade_network

  db-extensions-init:
    image: postgres:17-alpine
    volumes:
      - ./infrastructure/postgres/init-extensions.sql:/docker-entrypoint-initdb.d/00-init-extensions.sql
    depends_on:
      marketplace_database:
        condition: service_healthy
    command: >
      psql -U ${DB_USERNAME} -d ${DB_DATABASE} -h marketplace_database
      -f /docker-entrypoint-initdb.d/00-init-extensions.sql
    networks:
      - handmade_network

  redis:
    image: redis:7
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - handmade_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  user_service:
    build:
      context: ./user_service
      dockerfile: Dockerfile
    container_name: user_service
    restart: unless-stopped
    ports:
      - "8001:8001"
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG}
      - REDIS_URL=${REDIS_URL}
      - FRONTEND_URL=${FRONTEND_URL}
      - DATABASE_URL=postgresql://${DB_USERNAME}:${DB_PASSWORD}@marketplace_database:5432/${DB_DATABASE}?options=-csearch_path=users_schema
      - DEFAULT_FROM_EMAIL=${DEFAULT_FROM_EMAIL}
    volumes:
      - ./user_service:/app
    depends_on:
      marketplace_database:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - handmade_network
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:8001/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  marketplace_db_data:
  redis_data:

networks:
  handmade_network:
    driver: bridge